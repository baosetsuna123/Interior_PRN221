@page
@model CHC.Presentation.Pages.Staff.Quotation.IndexModel
@{
	ViewData["Title"] = "Staff - Quotations";
}
<div class="table-wrapper">
	<div class="table-title">
		<div class="row">
			<div class="col-sm-6">
				<h2>Manage <b>Quotations</b></h2>
			</div>
			<div class="col-sm-6">
				<form method="get">
					<div class="form-group">
						<div class="input-group mb-3">
							<input type="text" class="form-control" placeholder='Search Keyword' name="SearchString" value="@Model.SearchString">
							<div class="input-group-append">
								<button class="btn" type="submit"><i class="ti-search"></i></button>
							</div>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
	@if (!string.IsNullOrEmpty(Model.Message))
	{
		<div class="alert alert-success" role="alert">
			@Model.Message
			<a asp-page="/Staff/Contract/Index">View</a>
		</div>
	}
	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].Id)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].RequestDate)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].Content)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].Customer)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].ShippingCost)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].ConstructionCost)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].Interior)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].Interior.Location)</th>
				<th>@Html.DisplayNameFor(model => model.Quotations[0].Status)</th>
				<th>Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.Quotations)
			{
				<tr>
					<td class="text-truncate">@Html.DisplayFor(model => item.Id)</td>
					<td class="text-break">@Html.DisplayFor(model => item.RequestDate)</td>
					<td class="text-break">@Html.DisplayFor(model => item.Content)</td>
					<td class="text-truncate">@Html.DisplayFor(model => item.Customer.FullName)</td>
					<td class="text-break">@Html.DisplayFor(model => item.ShippingCost)</td>
					<td class="text-truncate">@Html.DisplayFor(model => item.ConstructionCost)</td>
					<td class="text-truncate">@Html.DisplayFor(model => item.Interior.Name)</td>
					<td class="text-truncate">@Html.DisplayFor(model => item.Interior.Location)</td>
					<td class="text-truncate">@Html.DisplayFor(model => item.Status)</td>
					<td>
						<form method="post" asp-page-handler="Approve">
							<input hidden name="Id" value="@item.Id">
							<button type="submit" class="text-success btn p-0"><i class="fas fa-check" aria-hidden="true"></i></button>
							<a href="#delete-@item.Id" class="delete" data-bs-toggle="modal"><i class="bi bi-x-lg" aria-hidden="true"></i></a>
						</form>
					</td>

				</tr>

				<div id="delete-@item.Id" class="modal fade">
					<div class="modal-dialog">
						<div class="modal-content">
							<form method="post" asp-page-handler="Reject">
								<div class="modal-header">
									<h4 class="modal-title">Reject Confirmation</h4>
									<button type="button" class="close" data-bs-dismiss="modal" aria-hidden="true">&times;</button>
								</div>
								<div class="modal-body">
									<p>Are you sure you want to reject this?</p>
								</div>
								<div class="modal-footer">
									<input type="button" class="btn btn-default" data-bs-dismiss="modal" value="Cancel">
									<input hidden name="Id" value="@item.Id">
									<input type="submit" class="btn btn-danger" value="Reject">
								</div>
							</form>
						</div>
					</div>
				</div>
			}
		</tbody>
	</table>
	<div class="clearfix">
		<ul class="pagination">
			@if (Model.HasPreviousPage)
			{
				<li class="page-item">
					<a class="page-link" asp-page="/Staff/Quotation/Index" asp-route-pageindex="@(Model.PageIndex - 1)">Previous</a>
				</li>
			}
			@for (int i = 1; i <= Model.TotalPages; i++)
			{
				if (i == Model.PageIndex)
				{
					<li class="page-item">
						<a class="page-link disabled">@i</a>
					</li>
				}
				else
				{
					<li class="page-item">
						<a class="page-link disabled" asp-page="/Staff/Quotation/Index" asp-route-pageindex="@i">@i</a>
					</li>
				}
			}
			@if (Model.HasNextPage)
			{
				<li class="page-item">
					<a class="page-link" asp-page="/Staff/Quotation/Index" asp-route-pageindex="@(Model.PageIndex + 1)">
						Next
					</a>
				</li>
			}
		</ul>
	</div>
</div>

