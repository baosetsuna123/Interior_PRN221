// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Razor_Page.Models;

#nullable disable

namespace Razor_Page.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Razor_Page.Models.Contract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractID"));

                    b.Property<DateTime>("AgreementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("ContractID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("Razor_Page.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Razor_Page.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackID"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.HasKey("FeedbackID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Razor_Page.Models.Interior", b =>
                {
                    b.Property<int>("InteriorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InteriorID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InteriorID");

                    b.ToTable("Interior");
                });

            modelBuilder.Entity("Razor_Page.Models.InteriorDetail", b =>
                {
                    b.Property<int>("InteriorID")
                        .HasColumnType("int");

                    b.Property<int>("MaterialID")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("InteriorID", "MaterialID");

                    b.HasIndex("MaterialID");

                    b.ToTable("InteriorDetails");
                });

            modelBuilder.Entity("Razor_Page.Models.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialID"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialID");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Razor_Page.Models.Quotation", b =>
                {
                    b.Property<int>("QuotationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuotationID"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<double>("EstimatePrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("QuotationID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Quotation");
                });

            modelBuilder.Entity("Razor_Page.Models.QuotationDetail", b =>
                {
                    b.Property<int>("InteriorID")
                        .HasColumnType("int");

                    b.Property<int>("QuotationID")
                        .HasColumnType("int");

                    b.HasKey("InteriorID", "QuotationID");

                    b.HasIndex("QuotationID");

                    b.ToTable("QuotationDetails");
                });

            modelBuilder.Entity("Razor_Page.Models.Contract", b =>
                {
                    b.HasOne("Razor_Page.Models.Customer", "Customer")
                        .WithMany("Contracts")
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Razor_Page.Models.Feedback", b =>
                {
                    b.HasOne("Razor_Page.Models.Customer", "Customer")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Razor_Page.Models.InteriorDetail", b =>
                {
                    b.HasOne("Razor_Page.Models.Interior", "Interior")
                        .WithMany("InteriorDetails")
                        .HasForeignKey("InteriorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Razor_Page.Models.Material", "Material")
                        .WithMany("InteriorDetails")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interior");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Razor_Page.Models.Quotation", b =>
                {
                    b.HasOne("Razor_Page.Models.Customer", "Customer")
                        .WithMany("Quotations")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Razor_Page.Models.QuotationDetail", b =>
                {
                    b.HasOne("Razor_Page.Models.Interior", "Interior")
                        .WithMany("QuotationDetails")
                        .HasForeignKey("InteriorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Razor_Page.Models.Quotation", "Quotation")
                        .WithMany("QuotationDetails")
                        .HasForeignKey("QuotationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interior");

                    b.Navigation("Quotation");
                });

            modelBuilder.Entity("Razor_Page.Models.Customer", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Feedbacks");

                    b.Navigation("Quotations");
                });

            modelBuilder.Entity("Razor_Page.Models.Interior", b =>
                {
                    b.Navigation("InteriorDetails");

                    b.Navigation("QuotationDetails");
                });

            modelBuilder.Entity("Razor_Page.Models.Material", b =>
                {
                    b.Navigation("InteriorDetails");
                });

            modelBuilder.Entity("Razor_Page.Models.Quotation", b =>
                {
                    b.Navigation("QuotationDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
